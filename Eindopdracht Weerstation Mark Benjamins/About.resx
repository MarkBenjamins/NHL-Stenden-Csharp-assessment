<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>